<?xml version="1.0" encoding="utf-8"?>
<scenario xmlns="urn:perfcake:scenario:7.0">
   <run type="iteration" value="${iteration.count:1000}"/>
   <generator class="DefaultMessageGenerator" threads="${thread.count:10}"/>
   <sequences>
      <sequence id="counter" class="PrimitiveNumberSequence"/>
   </sequences>
   <sender class="HttpSender">
      <target>http://${server.host}:${server.port}/api/workitems</target>
      <property name="method" value="POST"/>
      <property name="expectedResponseCodes" value="201"/>
   </sender>
   <reporting>
      <reporter class="ResponseTimeStatsReporter">
         <property name="minimumEnabled" value="false"/>
         <property name="maximumEnabled" value="false"/>
         <destination class="ChartDestination">
            <period type="time" value="1000"/>
            <property name="name" value="CREATE Response Time"/>
            <property name="group" value="create_rt"/>
            <property name="yAxis" value="Response Time [ms]"/>
            <property name="attributes" value="Result,Average"/>
         </destination>
         <destination class="ConsoleDestination">
            <period type="iteration" value="10"/>
         </destination>
      </reporter>
      <reporter class="ThroughputStatsReporter">
         <property name="minimumEnabled" value="false"/>
         <property name="maximumEnabled" value="false"/>
         <destination class="CsvDestination">
            <period type="time" value="2000"/>
            <property name="path" value="${perfcake.scenario}-average-throughput.csv"/>
         </destination>
      </reporter>
   </reporting>
   <messages>
      <message content="{&quot;data&quot;:{&quot;attributes&quot;:{&quot;system.description&quot;:&quot;This is a test&quot;,&quot;system.remote_item_id&quot;:null,&quot;system.state&quot;:&quot;open&quot;,&quot;system.title&quot;:&quot;test this @{counter} workitem&quot;,&quot;version&quot;:1},&quot;relationships&quot;:{&quot;area&quot;:{},&quot;assignees&quot;:{},&quot;baseType&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;bbf35418-04b6-426c-a60b-7f80beb0b624&quot;,&quot;type&quot;:&quot;workitemtypes&quot;}},&quot;creator&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;e6999b5e-9fa1-43c1-82b9-402cb2269eec&quot;,&quot;links&quot;:{&quot;self&quot;:&quot;http://${server.host}:${server.port}/api/users/e6999b5e-9fa1-43c1-82b9-402cb2269eec&quot;},&quot;type&quot;:&quot;identities&quot;}},&quot;iteration&quot;:{},&quot;space&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;2e0698d8-753e-4cef-bb7c-f027634824a2&quot;,&quot;type&quot;:&quot;spaces&quot;}}},&quot;type&quot;:&quot;workitems&quot;}}">
         <header name="HttpSender" value="POST"/>
         <header name="Content-Type" value="application/json"/>
         <header name="Accept" value="application/json"/>
         <header name="Authorization" value="Bearer ${auth.token}"/>
         <validatorRef id="printer"/>
      </message>
   </messages>
   <validation>
      <validator id="printer" class="PrintingValidator"/>
   </validation>
</scenario>
