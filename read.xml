<?xml version="1.0" encoding="utf-8"?>
<scenario xmlns="urn:perfcake:scenario:7.0">
   <run type="iteration" value="${iteration.count:1000}"/>
   <generator class="DefaultMessageGenerator" threads="${thread.count:10}"/>
   <sequences>
      <sequence id="workItemId" class="FileLinesSequence">
         <property name="fileUrl" value="${workitemid.list}"/>
      </sequence>
   </sequences>
   <sender class="HttpSender">
      <target>http://api-perf.dev.rdu2c.fabric8.io/api/workitems/@{workItemId}</target>
      <property name="method" value="GET"/>
      <property name="keepConnection" value="false"/>
      <property name="expectedResponseCodes" value="200"/>
   </sender>
   <reporting>
      <reporter class="ResponseTimeStatsReporter">
         <property name="minimumEnabled" value="false"/>
         <property name="maximumEnabled" value="false"/>
         <destination class="ChartDestination">
            <period type="time" value="1000"/>
            <property name="name" value="Response Time"/>
            <property name="group" value="read_rt"/>
            <property name="yAxis" value="Response Time [ms]"/>
            <property name="attributes" value="Result,Average"/>
         </destination>
         <destination class="ConsoleDestination">
            <period type="iteration" value="10"/>
         </destination>
      </reporter>
      <reporter class="ThroughputStatsReporter">
         <property name="minimumEnabled" value="false"/>
         <property name="maximumEnabled" value="false"/>
         <destination class="CsvDestination">
            <period type="time" value="2000"/>
            <property name="path" value="${perfcake.scenario}-average-throughput.csv"/>
         </destination>
      </reporter>
   </reporting>
   <messages>
      <message content="">
         <header name="HttpSender" value="GET"/>
         <header name="Content-Type" value="application/json"/>
         <header name="Accept" value="application/json"/>
         <header name="Authorization" value="Bearer ${auth.token}"/>
         <validatorRef id="simplePrintValidator"/>
         <validatorRef id="printer"/>
      </message>
   </messages>
   <validation>
      <validator id="simplePrintValidator" class="RegExpValidator">
         <property name="pattern" value=".*test this .* workitem.*"/>
      </validator>
      <validator id="printer" class="PrintingValidator"/>
   </validation>
</scenario>
